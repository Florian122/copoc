{"version":3,"sources":["components/Welcome.js","components/Video.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","onFinished","useState","next","setNext","style","padding","width","display","flexDirection","flex","overflowY","marginLeft","className","onClick","Video","choices","leftVideo","useRef","rightVideo","progress","setProgress","selectedVideo","setSelectedVideo","questionType","setQuestionType","videoFinished","id","console","log","Questions","type","handleNext","choice","push","video","current","src","videoSrc","play","useEffect","marginBottom","position","backgroundColor","height","justifyContent","alignItems","textAlign","color","content","onEnded","ref","autoPlay","border","Result","screen","setScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6f1cd210.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport '../Styles.css';\r\n\r\nexport default function Welcome({onFinished}) {\r\n  const [next, setNext] = useState(false);\r\n\r\n  if (!next) {\r\n    return (\r\n      <div style={{ padding: 16 }}>\r\n        <h1 style={{ width: \"70%\" }}>\r\n          Herzlich willkommen auf unserer Webseite, bevor es losgeht, wollen wir\r\n          dir noch ein paar Begriffe erklären:\r\n        </h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ flex: 2 }} />\r\n          <div style={{ flex: 2, overflowY: \"auto\" }}>\r\n            <p>\r\n              <b>PoC</b> = Person of Color;\r\n              <br />\r\n              ein selbstgewählter politischer Begriff für nichtweiße Menschen\r\n            </p>\r\n            <p>\r\n              <b>BPoC</b> = Black Person of Color; <br />\r\n              es ist wichtig schwarze Menschen explizit zu erwähnen, da sie\r\n              aufgrund der weltweiten Kolonialisierungsgeschichte andere\r\n              Rassimuserfahrungen machen als andere PoC.\r\n            </p>\r\n            <p>\r\n              Bei den Begriffen <b>schwarz</b> und <b>weiß</b> geht es nicht um\r\n              wirkliche Farben, sie stehen für soziale & politische Positionen,\r\n              die von Rassismus erzeugt wurden.\r\n            </p>\r\n            <p>\r\n              <b>Cop</b> = englisches, umgangssprachliches Wort für die Polizei\r\n            </p>\r\n            <p>\r\n              <small>\r\n                * In unseren Logo verwenden wir aus ästhtischen Gründen die\r\n                Abkürzung PoC, damit wollen wir Rassismuserfahrungen von BPoC\r\n                nicht verharmlosen.\r\n              </small>\r\n            </p>\r\n\r\n            <button\r\n              style={{marginLeft: \"40%\"}}\r\n              className=\"button\"\r\n              onClick={() => setNext(true)}\r\n            >\r\n              Verstanden\r\n            </button>\r\n          </div>\r\n          <div style={{ flex: 1 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ padding: 16 }}>\r\n        <h1 style={{ width: \"70%\" }}>\r\n          Du hast die Möglichkeit einen Polizisten und eine BPoC zu folgendem\r\n          Vorfall zu befragen; dazu werden dir jeweils zwei Fragen vorgeschlagen\r\n          aus denen du Eine wählen kannst.\r\n        </h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ flex: 2 }} />\r\n          <div style={{ flex: 2, overflowY: \"auto\" }}>\r\n            <p>\r\n              Ein junger Mann steigt nachts in einen Fernbus. Die Polizei führt\r\n              eine Personenkontrolle in Zivil durch. Dafür setzt sie sich,\r\n              getarnt als Passagier, mit in den Bus. Der junge Mann wird als\r\n              erster kontrolliert. Zwei weitere Personen werden aufgeweckt und\r\n              ebenfalls überprüft.\r\n            </p>\r\n            <p>\r\n              Insgesamt werden in einem vollen Bus drei Personenkontrollen\r\n              durchgeführt. Bei den kontrollierten Personen handelt es sich um\r\n              BPoC, die restlichen Passagiere des Busses sind weiß.\r\n            </p>\r\n            <p>\r\n              Als die Personen sich äußern, dass es sich bei der Kontrolle um\r\n              Racial Profiling handelt, weist die Polizei diesen Vorwurf von\r\n              sich.\r\n            </p>\r\n\r\n            <button\r\n              style={{marginLeft: \"40%\"}}\r\n              className=\"button\"\r\n              onClick={() => onFinished()}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n          <div style={{ flex: 1 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"../Styles.css\";\r\nimport Questions from \"../Questions.json\";\r\n\r\nexport default function Video({ choices, onFinished }) {\r\n  const leftVideo = useRef();\r\n  const rightVideo = useRef();\r\n\r\n  const [progress, setProgress] = useState(8);\r\n  const [selectedVideo, setSelectedVideo] = useState(\"none\");\r\n\r\n  const [questionType, setQuestionType] = useState(\"none\");\r\n\r\n  const videoFinished = (id) => {\r\n    if (progress === 11) {\r\n      onFinished();\r\n      return;\r\n    }\r\n    console.log(id);\r\n    setQuestionType(Questions[progress].type);\r\n  };\r\n\r\n  const handleNext = (choice) => {\r\n    choices.push(choice);\r\n    setProgress(progress + 1);\r\n    setQuestionType(\"none\");\r\n    if (Questions[progress].video === \"left\") {\r\n      leftVideo.current.src = Questions[progress].videoSrc;\r\n      leftVideo.current.play();\r\n    } else {\r\n      rightVideo.current.src = Questions[progress].videoSrc;\r\n      rightVideo.current.play();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {});\r\n\r\n  const renderFooter = () => {\r\n    if (questionType === \"none\") {\r\n      return null;\r\n    }\r\n    if (questionType === \"single\") {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"40%\",\r\n              padding: 16,\r\n            }}\r\n          >\r\n            {Questions[progress].video === \"left\" ? (\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <button\r\n                  style={{ border: \"none\", backgroundColor: \"white\" }}\r\n                  className=\"question\"\r\n                  onClick={() => handleNext()}\r\n                >\r\n                  {Questions[progress].content[0]}\r\n                </button>\r\n                <button\r\n                  style={{ border: \"none\", backgroundColor: \"white\" }}\r\n                  className=\"question\"\r\n                  onClick={() => handleNext()}\r\n                >\r\n                  {Questions[progress].content[1]}\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"20%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h1>COP</h1>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"40%\",\r\n              padding: 16,\r\n            }}\r\n          >\r\n            {Questions[progress].video === \"right\" ? (\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <button\r\n                  style={{ border: \"none\", backgroundColor: \"white\" }}\r\n                  className=\"question\"\r\n                  onClick={() => handleNext()}\r\n                >\r\n                  {Questions[progress].content[0]}\r\n                </button>\r\n                <button\r\n                  style={{ border: \"none\", backgroundColor: \"white\" }}\r\n                  className=\"question\"\r\n                  onClick={() => handleNext()}\r\n                >\r\n                  {Questions[progress].content[1]}\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <button\r\n            style={{ border: \"none\", backgroundColor: \"white\" }}\r\n            className=\"question\"\r\n            onClick={() => handleNext()}\r\n          >\r\n            {Questions[progress].content[1]}\r\n          </button>\r\n          <button\r\n            style={{ border: \"none\", backgroundColor: \"white\" }}\r\n            className=\"question\"\r\n            onClick={() => handleNext()}\r\n          >\r\n            {Questions[progress].content[2]}\r\n          </button>\r\n          <button\r\n            style={{ border: \"none\", backgroundColor: \"white\" }}\r\n            className=\"question\"\r\n            onClick={() => handleNext()}\r\n          >\r\n            {Questions[progress].content[3]}\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n        {questionType === \"both\" ? (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              width: \"100%\",\r\n              height: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1 style={{ textAlign: \"center\", color: \"white\" }}>\r\n              {Questions[progress].content[0]}\r\n            </h1>\r\n          </div>\r\n        ) : null}\r\n        {questionType === \"none\" && false ? (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              width: \"50%\",\r\n              height: \"60%\",\r\n              left: Questions[progress].video === \"left\" ? 0 : \"50%\",\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n        <video\r\n          src=\"/videos/test1.mp4\"\r\n          onEnded={() => videoFinished(0)}\r\n          onClick={() => setSelectedVideo(\"left\")}\r\n          style={{\r\n            width: selectedVideo === \"left\" ? \"60%\" : \"50%\",\r\n          }}\r\n          ref={leftVideo}\r\n        />\r\n\r\n        <video\r\n          autoPlay\r\n          src=\"/videos/test1.mp4\"\r\n          onEnded={() => videoFinished(1)}\r\n          onClick={() => setSelectedVideo(\"right\")}\r\n          style={{\r\n            width: selectedVideo === \"right\" ? \"60%\" : \"50%\",\r\n          }}\r\n          ref={rightVideo}\r\n        />\r\n      </div>\r\n      {renderFooter()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"../Styles.css\";\r\n\r\nexport default function Result({ onFinished }) {\r\n  const [screen, setScreen] = useState(\"result\");\r\n\r\n  if (screen === \"result\") {\r\n    return (\r\n      <div style={{ padding: 16 }}>\r\n        <h1 style={{ width: \"70%\" }}>\r\n          Die Auswahl deiner Fragen deuten darauf hin, dass du dich eher in\r\n          meine Lage versetzen kannst\r\n        </h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ flex: 2 }} />\r\n          <div style={{ flex: 2, overflowY: \"auto\" }}>\r\n            <p>\r\n              ...mir ist es wichtig dir zu sagen, dass es hierbei nicht darum\r\n              geht Position zu beziehen, sondern beide Seiten zu verstehen und\r\n              deren Problematik anzuerkennen.\r\n            </p>\r\n            <p>\r\n              Falls du dich noch mehr mit der Thematik (der Rolle des BPoC)\r\n              Rassismus auseinander setzen möchtest, haben wir dir auf der\r\n              nächsten Seite eine Sammlung zusammengestellt, die dir hilft das\r\n              Problem besser zu verstehen und Meachnsimen aufzeigt, wie du daran\r\n              arbeiten kannst.\r\n            </p>\r\n            <button\r\n              style={{ marginLeft: \"40%\" }}\r\n              className=\"button\"\r\n              onClick={() => setScreen(\"end\")}\r\n            >\r\n              alles klar!\r\n            </button>\r\n          </div>\r\n          <div style={{ flex: 1 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (screen === \"end\") {\r\n    return (\r\n      <div style={{ padding: 16 }}>\r\n        <h1 style={{ width: \"70%\" }}>\r\n          Vielen Dank fürs Zuhören. Unsere Linkliste steht dir jederzeit,\r\n          kostenfrei zur Verfügung bla bla\r\n        </h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ flex: 2 }} />\r\n          <div style={{ flex: 2, overflowY: \"auto\" }}>\r\n            <p>\r\n              Faccatem fugia earum everferis aut rerferibus aut vendionseque por\r\n              magnam corrorere exped mo exped quiducim andae nullest emporatis\r\n              incta nam reruntiis di ad quas escipsam harcidus non cum quos atem\r\n              adio molupta volupta ssitaspid molupta noneceatem et estibus\r\n              aperrum alit, volore pre, que num quia que si nihilit que nus mo\r\n              il eos acepel ipsandu scillaut ommolor eriberestia nonet harchil\r\n              eum ere ma quo volupta venda nonsed quame volori offic te omni as\r\n              proria alia sent re quam et, sus, odiscil intiosae iur? Ratestium\r\n              est facerfe rorerferest, occullitis a non parum, cus earchicid\r\n              est, sum quaeptatium non placcatus cum, occust ant. Occae\r\n              soluptaquiae simenim enisqui conserum reruntore explant asiminimus\r\n              moluptat. Udam quia nihicimus. Aquis estem que etur, cone a nat.\r\n            </p>\r\n          </div>\r\n          <div style={{ flex: 1 }} />\r\n        </div>\r\n        <button\r\n          style={{\r\n            position: \"absolute\",\r\n            border: \"none\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n          className=\"question\"\r\n          onClick={() => setScreen(\"contact\")}\r\n        >\r\n          Kontakt\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  if (screen === \"contact\") {\r\n    return (\r\n      <div style={{ padding: 16 }}>\r\n        <h1 style={{ width: \"70%\" }}>Kontakt</h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div style={{ flex: 2 }} />\r\n          <div style={{ flex: 2, overflowY: \"auto\" }}>\r\n            <p>\r\n              Faccatem fugia earum everferis aut rerferibus aut vendionseque por\r\n              magnam corrorere exped mo exped quiducim andae nullest emporatis\r\n              incta nam reruntiis di ad quas escipsam harcidus non cum quos atem\r\n              adio molupta volupta ssitaspid molupta noneceatem et estibus\r\n              aperrum alit, volore pre, que num quia que si nihilit que nus mo\r\n              il eos acepel ipsandu scillaut ommolor eriberestia nonet harchil\r\n              eum ere ma quo volupta venda nonsed quame volori offic te omni as\r\n              proria alia sent re quam et, sus, odiscil intiosae iur? Ratestium\r\n              est facerfe rorerferest, occullitis a non parum, cus earchicid\r\n              est, sum quaeptatium non placcatus cum, occust ant.\r\n            </p>\r\n          </div>\r\n          <div style={{ flex: 1 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport Video from \"./components/Video\";\r\nimport Result from \"./components/Result\";\r\n\r\nexport default function App() {\r\n  const [screen, setScreen] = useState(\"welcome\");\r\n\r\n  const choices = [];\r\n\r\n  if (screen === \"welcome\") {\r\n    return <Welcome onFinished={() => setScreen(\"video\")} />;\r\n  }\r\n  if (screen === \"video\") {\r\n    return <Video choices={choices} onFinished={() => setScreen(\"result\")} />;\r\n  }\r\n  if (screen === \"result\") {\r\n    return <Result choices={choices} />;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}